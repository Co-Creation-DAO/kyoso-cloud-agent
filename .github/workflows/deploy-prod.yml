name: Deploy to Production

on:
  push:
    branches: [main]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PROD }}
  GCP_REGION: ${{ secrets.GCP_REGION_PROD }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME_PROD }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci
      - run: npx prisma generate
      - run: npm run build
      # - run: npm run lint
      # - run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev --quiet

      - name: Build & Push Image
        run: |
          IMAGE="asia-northeast1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/kyoso-nestapi-prod/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image $IMAGE \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-secrets API_KEY=PROD_API_KEY:latest \
            --set-secrets HTTP_TIMEOUT=PROD_HTTP_TIMEOUT:latest \
            --set-secrets IDENTUS_CLOUD_AGENT_URL=PROD_IDENTUS_CLOUD_AGENT_URL:latest \
            --set-secrets KYOSO_ISSUER_API_KEY=PROD_KYOSO_ISSUER_API_KEY:latest \
            --set-secrets IDENTUS_API_SALT=PROD_IDENTUS_API_SALT:latest \
            --set-secrets REDIS_HOST=PROD_REDIS_HOST:latest \
            --set-secrets REDIS_PORT=PROD_REDIS_PORT:latest \
            --set-secrets AUTH_MODE=PROD_AUTH_MODE:latest \
            --set-secrets FIREBASE_ISSUER=PROD_FIREBASE_ISSUER:latest \
            --set-secrets FIREBASE_AUDIENCE=PROD_FIREBASE_AUDIENCE:latest \
            --set-secrets FIREBASE_PROJECT_ID=PROD_FIREBASE_PROJECT_ID:latest \
            --set-secrets FIREBASE_CLIENT_EMAIL=PROD_FIREBASE_CLIENT_EMAIL:latest \
            --set-secrets FIREBASE_PRIVATE_KEY=PROD_FIREBASE_PRIVATE_KEY:latest \
            --set-secrets FIREBASE_AUTH_DOMAIN=PROD_FIREBASE_AUTH_DOMAIN:latest \
            --set-secrets FIREBASE_API_KEY=PROD_FIREBASE_API_KEY:latest \
            --set-secrets BLOCKFROST_PROJECT_ID=PROD_BLOCKFROST_PROJECT_ID:latest \
            --set-secrets WALLET_MNEMONIC=PROD_WALLET_MNEMONIC:latest \
            --set-secrets CARDANO_NETWORK_ID=PROD_CARDANO_NETWORK_ID:latest \
            --set-secrets POINT_DATABASE_URL=PROD_POINT_DATABASE_URL:latest


      - name: Verify deployment
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.GCP_REGION }} \
            --project ${{ env.GCP_PROJECT_ID }} \
            --format="value(status.url)")
          echo "Service URL: $URL"

          CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || echo "000")
          if [ "$CODE" = "200" ]; then
            echo "✅ Service is healthy"
          else
            echo "❌ Deployment verification failed ($CODE)"
            exit 1
          fi

      - name: Post deployment info
        if: success()
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.GCP_REGION }} \
            --project ${{ env.GCP_PROJECT_ID }} \
            --format="value(status.url)")
          echo "🚀 **Deployment Summary**" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: [$URL]($URL)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
